$loading__gap: 40;
$loading__size: 10.5rem;

@mixin animation__loading--spin {
  // Animate the container
  animation-name: rotate;
  animation-duration: 500ms;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;

  // Animate the stroke
  & svg circle {
    animation-name: init-stroke;
    animation-duration: 1000ms;
    animation-timing-function: cubic-bezier(.6, 0, .5, 1.0);
  }
}

@mixin animation__loading--stop {
  // Animate the container
  animation: rotate-end-p1 700ms cubic-bezier(0, 0, .7, 1.1) forwards, rotate-end-p2 700ms cubic-bezier(0, 0, 1, 1) 700ms forwards;

  // Animate the stroke
  & svg circle {
    animation-name: stroke-end;
    animation-duration: 700ms;
    animation-timing-function: cubic-bezier(0, 0, .7, 1.1);
    animation-delay: 700ms;
    animation-fill-mode: forwards;
  }
}

.loader {
  @include animation__loading--spin;
  width: $loading__size;
  height: $loading__size;

  // Animation (Spin by default)
  &__svg {
    fill: transparent;
    stroke: color('teal', 30);
    stroke-width: 7;
    stroke-linecap: butt;
    stroke-dasharray: 240;
    stroke-dashoffset: $loading__gap;
  }

  &.loader--stop {
    @include animation__loading--stop;
  }
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes rotate-end-p1 {
  100% { transform: rotate(360deg); }
}

@keyframes rotate-end-p2 {
  100% { transform: rotate(-360deg); }
}

/* Stroke animations */
@keyframes init-stroke {
  0% { stroke-dashoffset: 240; }
  100% { stroke-dashoffset: $loading__gap; }
}

@keyframes stroke-end {
  0% { stroke-dashoffset: $loading__gap; }
  100% { stroke-dashoffset: 240; }
}
